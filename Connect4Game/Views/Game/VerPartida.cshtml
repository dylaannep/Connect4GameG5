@model VerPartidaViewModel
@{
    ViewData["Title"] = "Detalle Partida";
}


<h2 class="text-center">@ViewData["Title"]</h2>


<div id="mensajePartida" class="alert d-none text-center" role="alert"></div>



@if (Model.Partida.Estado == EstadoPartida.Finalizada)
{
    <div class="alert alert-success text-center">
        <h3>Â¡Partida finalizada!</h3>
        @if (Model.Partida.GanadorId.HasValue)
        {
            <p>Ganador:
                @if (Model.Partida.GanadorId == Model.Partida.Jugador1Id)
                {
                <p class="text-center"><strong>
                        @Model.Partida.Jugador1.Nombre (Rojo)
                    </strong></p>
            }
            else
            {
                <p class="text-center"><strong>
                        @Model.Partida.Jugador2.Nombre (Amarillo)
                    </strong></p>
            }
            </p>
        }
        else
        {
            <p>La partida terminÃ³ en empate.</p>
        }
    </div>
}else{

@if (Model.TurnoGuardado == 1)
{
    <p class="text-center">Turno del Jugador: <strong id="turnoActual">
            @Model.Partida.Jugador1.Nombre (Rojo)
        </strong></p>
}
else
{
    <p class="text-center">Turno del Jugador: <strong id="turnoActual">
            @Model.Partida.Jugador2.Nombre (Amarillo)
        </strong></p>
}
}




<div class="text-center">
    <table id="tablero">
        <thead>
            <tr>
                <th>A</th>
                <th>B</th>
                <th>C</th>
                <th>D</th>
                <th>E</th>
                <th>F</th>
                <th>G</th>
            </tr>
        </thead>
        <tbody>
            @for (int fila = 0; fila < 6; fila++)
            {
                <tr>
                    @for (int col = 0; col < 7; col++)
                    {
                        <td id="celda-@fila-@col" onclick="jugar(@col)">
                            <div class="disco-base"></div>
                        </td>
                    }
                </tr>
            }
        </tbody>
    </table>
</div>

<div class="text-center mt-3 d-flex justify-content-center gap-2">
    <a asp-action="RegistroPartida" class="btn btn-secondary">Volver</a>

    @if (Model.Partida.Estado == EstadoPartida.Finalizada)
    {
        <div class="alert alert-info text-center">Esta partida ya finalizÃ³.</div>
    }


    @if (Model.Partida.Estado == EstadoPartida.EnCurso)
    {
        <a asp-action="Reanudar" asp-route-id="@Model.Partida.Id" class="btn btn-primary">Reanudar</a>
    }
</div>


@* 
<div class="container mt-4">
    <h2>Partida entre @Model.Partida.Jugador1.Nombre y @Model.Partida.Jugador2.Nombre</h2>
    <p><strong>Estado:</strong> @Model.Partida.Estado</p>
    <p><strong>Turno Actual:</strong> 
        @(Model.TurnoActual == Model.Partida.Jugador1Id 
            ? Model.Partida.Jugador1.Nombre 
            : Model.Partida.Jugador2.Nombre)
    </p>
    <p><strong>Fecha:</strong> @Model.Partida.Fecha.ToString("dd/MM/yyyy HH:mm")</p>

    <h3>Tablero</h3>
    <table class="table table-bordered text-center">
        @for (int i = 0; i < Model.Tablero.GetLength(0); i++)
        {
            <tr>
                @for (int j = 0; j < Model.Tablero.GetLength(1); j++)
                {
                    var celda = Model.Tablero[i, j];
                    string contenido = celda == 0 ? "" : 
                                       (celda == Model.Partida.Jugador1Id ? "âšª" : "ðŸ”´");
                    <td style="width:50px; height:50px;">@contenido</td>
                }
            </tr>
        }
    </table>

    <a asp-action="RegistroPartida" class="btn btn-secondary">Volver</a>
</div> *@

<script>
    const partidaIdcs = @Model.Partida.Id;
    const jugador1 = {
        id: @Model.Partida.Jugador1Id,
        nombre: '@Model.Partida.Jugador1.Nombre',
        color: 'rojo'
    };
    const jugador2 = {
        id: @Model.Partida.Jugador2Id,
        nombre: '@Model.Partida.Jugador2.Nombre',
        color: 'amarillo'
    };
    let turno = @Model.TurnoGuardado ?? 1; // si viene null, arranca en 1
    console.log("Turno guardado-------: " + turno);
    const tableroGuardado = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.Tablero));
    const estadoPartida = '@Model.Partida.Estado';

</script>

<script src="~/js/TableroCargar.js"></script>